@startuml SD Lv3

!pragma teoz true

participant " "
box "Campus Management" #LightBlue

    box "Framework And Drivers Layer" #00ffff
        participant Routing
        participant "Passage Persistence" as Persistence
    end box

    participant "Data Model" as Data
    box "Interface Adapters Layer" #77ffaa
        participant Controller
        participant "Passage Repository" as Repository
        participant "Floor Repository" as FloorRepository
    end box

    participant "Passage DTO" as PassageDTO
    participant "Passage Mapper" as PassageMapper
    box "Application Business Rules" #ff6666
        participant "Passage Service" as PassageService
    end box

    box "Enterprise Business Rules" #eeddaa
        participant Passage
    end box
end box

[o-> Routing : Post /passage
activate Routing

    Routing -> Controller : createPassage(input)
    activate Controller

        Controller -> PassageDTO : input as PassageDTO
        activate PassageDTO

        PassageDTO --> Controller : passageDTO
        deactivate PassageDTO

        Controller -> PassageService : createPassage(passageDTO)
        activate PassageService
        
            PassageService -> Repository : findByCodes(passageDTO.buildingCode1, passageDTO.buildingCode2)
            activate Repository

                Repository -> Persistence : findByCodes(passageDTO.buildingCode1, passageDTO.buildingCode2)
                activate Persistence

                Persistence --> Repository : passageExists
                deactivate Persistence

            Repository --> PassageService : passageExists
            deactivate Repository

            alt if passage does not exist

                PassageService -> FloorRepository : findByCode(passageDTO.buildingCode1, passageDTO.floorNumber1)
                activate FloorRepository

                    FloorRepository -> Persistence : findByCode(passageDTO.buildingCode1, passageDTO.floorNumber1)
                    activate Persistence

                    Persistence --> FloorRepository : floor1Exists
                    deactivate Persistence

                FloorRepository --> PassageService : floor1Exists
                deactivate FloorRepository

                PassageService -> FloorRepository : findByCode(passageDTO.buildingCode2, passageDTO.floorNumber2)
                activate FloorRepository

                    FloorRepository -> Persistence : findByCode(passageDTO.buildingCode2, passageDTO.floorNumber2)
                    activate Persistence

                    Persistence --> FloorRepository : floor2Exists
                    deactivate Persistence

                FloorRepository --> PassageService : floor2Exists
                deactivate FloorRepository

                alt if both floors exist
                    PassageService -> Passage : create(passageDTO)
                    activate Passage

                    Passage --> PassageService : passage
                    deactivate Passage

                    PassageService -> Repository : save(passage)
                    activate Repository

                        Repository -> Persistence : save(passage)
                        activate Persistence

                        Persistence --> Repository : SavedSuccessfully
                        deactivate Persistence

                    Repository --> PassageService : SavedSuccessfully
                    deactivate Repository

                    PassageService -> PassageMapper : toDTO(passage)
                    activate PassageMapper

                        PassageMapper -> PassageDTO : passage as DTO
                        activate PassageDTO

                        PassageDTO --> PassageMapper : passageDTO
                        deactivate PassageDTO

                    PassageMapper --> PassageService : passageDTO
                    deactivate PassageMapper

                    PassageService --> Controller : passageDTO
                    Controller --> Routing : passageDTO
                else floor does not exist
                    PassageService --> Controller : Failure(Floor does not exist or Building does not exist)
                    Controller --> Routing : Error "Floor does not exist or Building does not exist"
                end

            else passage exists
                PassageService --> Controller : Failure(Passage already exists)
                Controller --> Routing : Error "Passage already exists"
            end
        deactivate PassageService

    deactivate Controller

[o<--o Routing : Response (passageDTO or Error)
deactivate Routing

@enduml

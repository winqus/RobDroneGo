@startuml SD Lv3

!pragma teoz true

participant "Campus manager" as Campus
box "Campus Management UI" #LightBlue

    box "View"
        participant "HTML + CSS + JS" as html
        participant "Component" as component
    end box
    participant "Building Service" as buildingService
    participant "Floor Service" as floorService
    participant "Map Service" as mapService
    participant "API Routes" as API_ROUTES
    participant "Http driver" as http

end box
participant "Campus Management API" as CampusAPI


Campus -> html : load route
activate html

    html -> component : load all buildings
    activate component

        component -> buildingService : get all buildings
        activate buildingService

            buildingService -> API_ROUTES : building.getAll
            activate API_ROUTES

            API_ROUTES --> buildingService : api route
            deactivate API_ROUTES

            buildingService -> http : get(api route)
            activate http

                http -> CampusAPI : send request
                activate CampusAPI

                    CampusAPI -> CampusAPI : list all buildings
                    note right : procedures in the\nuser story ID170
                    
                CampusAPI --> http : return list
                deactivate CampusAPI

            http --> buildingService : return list
            deactivate http

        buildingService --> component : return list
        deactivate buildingService

    component --> html : return buildings
    deactivate component

html --> Campus : show list buildings

Campus --> html : select building

    html -> component : load all floors
    activate component

        component -> floorService : get getFloorsByBuildingCode(buildingCode)
        activate floorService

            floorService -> API_ROUTES : floor.getByBuildingCode(buildingCode)
            activate API_ROUTES

            API_ROUTES --> floorService : api route
            deactivate API_ROUTES

            floorService -> http : get(api route)
            activate http

                http -> CampusAPI : send request
                activate CampusAPI

                    CampusAPI -> CampusAPI : list all floors
                    note right : procedures in the\nuser story ID210
                    
                CampusAPI --> http : return list
                deactivate CampusAPI

            http --> floorService : return list
            deactivate http

        floorService --> component : return list
        deactivate floorService
    
    component --> html : return floors
    deactivate component

html --> Campus : show list floors

Campus --> html : select floor

Campus -> html : upload map

    html -> component : upload map
    activate component

        component -> mapService : uploadMap(map)
        activate mapService

            mapService -> API_ROUTES : map.uploadMap(buildingCode, floorNumber)
            activate API_ROUTES

            API_ROUTES --> mapService : api route
            deactivate API_ROUTES

            mapService -> http : patch(api route, map)
            activate http

                http -> CampusAPI : send request
                activate CampusAPI

                    CampusAPI -> CampusAPI : get map
                    note right : procedures in the\nuser story ID230
                    
                CampusAPI --> http : return map
                deactivate CampusAPI

            http --> mapService : return map
            deactivate http

        mapService --> component : return map
        deactivate mapService

    component --> html : return uploaded map successfully
    deactivate component

html --> Campus : show uploaded map successfully
deactivate html


@enduml
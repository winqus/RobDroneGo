{"info": {"_postman_id": "528eab04-28ec-48d0-9e68-6824baeb71ec", "name": "Node E2E Tests - Elevator", "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json", "updatedAt": "2023-11-16T09:22:58.000Z", "uid": "30711573-528eab04-28ec-48d0-9e68-6824baeb71ec"}, "item": [{"name": "[Pre] Create Building EF", "event": [{"listen": "test", "script": {"id": "7dfe080a-d754-4c8b-afd5-a15b02d298a8", "exec": ["// Change this test if doesn't work for your test case\r", "pm.test(\"Creation is successful or already exists\", function () {\r", "    pm.expect(pm.response.code).to.be.oneOf([201, 400]);\r", "});\r", ""], "type": "text/javascript"}}, {"listen": "prerequest", "script": {"id": "7a8dce22-dafd-4251-a849-5846494109a0", "exec": [""], "type": "text/javascript"}}], "id": "93f6651c-438b-47fc-ad7c-a6f8109e85fd", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "POST", "header": [], "body": {"mode": "raw", "raw": "{\r\n    \"code\": \"EF\",\r\n    \"floorSizeLength\": 1000,\r\n    \"floorSizeWidth\": 1000\r\n}", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/building", "host": ["{{baseUrl}}"], "path": ["building"]}}, "response": [], "uid": "30711573-93f6651c-438b-47fc-ad7c-a6f8109e85fd"}, {"name": "[Pre] Create Floor EF8", "event": [{"listen": "prerequest", "script": {"id": "c23a6f59-1283-42ef-bc05-46a17153fda8", "exec": [""], "type": "text/javascript"}}, {"listen": "test", "script": {"id": "136a32b4-37f9-4a0d-af63-edd48f22e9a5", "exec": ["pm.test(\"Creation is successful or already exists\", function () {\r", "    pm.expect(pm.response.code).to.be.oneOf([201, 400, 500]);\r", "})"], "type": "text/javascript"}}], "id": "cc911ba3-b482-49b2-955a-2d8152aba9bd", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "POST", "header": [], "body": {"mode": "raw", "raw": "{\r\n    \"floorNumber\": 8,\r\n    \"description\": \"created for elevator tests\",\r\n    \"servedByElevator\": false,\r\n    \"buildingCode\":\"EF\"\r\n}", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/floor", "host": ["{{baseUrl}}"], "path": ["floor"]}}, "response": [], "uid": "30711573-cc911ba3-b482-49b2-955a-2d8152aba9bd"}, {"name": "[Pre] Create Floor EF5", "event": [{"listen": "prerequest", "script": {"id": "c23a6f59-1283-42ef-bc05-46a17153fda8", "exec": [""], "type": "text/javascript"}}, {"listen": "test", "script": {"id": "136a32b4-37f9-4a0d-af63-edd48f22e9a5", "exec": ["let jsonData = pm.response.json();\r", "if(pm.response.code === 201) {\r", "    pm.collectionVariables.set(\"lastCreatedFloorId\", jsonData.id);\r", "}\r", "pm.test(\"Creation is successful or already exists\", function () {\r", "    pm.expect(pm.response.code).to.be.oneOf([201, 400, 500]);\r", "})\r", ""], "type": "text/javascript"}}], "id": "0eb77db6-cb51-41d8-b1ed-bd5dc760c282", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "POST", "header": [], "body": {"mode": "raw", "raw": "{\r\n    \"floorNumber\": 5,\r\n    \"description\": \"created for elevator tests\",\r\n    \"servedByElevator\": false,\r\n    \"buildingCode\":\"EF\"\r\n}", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/floor", "host": ["{{baseUrl}}"], "path": ["floor"]}}, "response": [], "uid": "30711573-0eb77db6-cb51-41d8-b1ed-bd5dc760c282"}, {"name": "Get elevators in building without elevators - Success", "event": [{"listen": "test", "script": {"id": "2a2ffb12-bdf2-42c7-a05a-871877b29c10", "exec": ["pm.test(\"Status code is 200\", function () {\r", "    pm.response.to.have.status(200);\r", "});\r", "\r", "let jsonData = pm.response.json();\r", "pm.test(\"Has empty array\", function () {\r", "    pm.expect(jsonData.length).to.eql(0);\r", "});"], "type": "text/javascript"}}], "id": "0f13baa7-d999-43de-9fff-425fd1eca32f", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "GET", "header": [], "url": {"raw": "{{baseUrl}}/building/EF/elevators", "host": ["{{baseUrl}}"], "path": ["building", "EF", "elevators"]}}, "response": [], "uid": "30711573-0f13baa7-d999-43de-9fff-425fd1eca32f"}, {"name": "Create Elevator with full body - Success", "event": [{"listen": "prerequest", "script": {"id": "b7444cad-2ba6-41fe-90e0-b54e22941c84", "exec": [""], "type": "text/javascript"}}, {"listen": "test", "script": {"id": "a0ff29bd-930f-4017-bf1c-4e10f3c152e1", "exec": ["pm.test(\"Status code is 201\", function () {\r", "    pm.response.to.have.status(201);\r", "});\r", "pm.test(\"Response must be valid and have a elevator \", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData).to.have.property('elevator');\r", "});\r", "pm.test(\"Response must be valid and have a number\", function () {\r", "    var jsonData = pm.response.json().elevator;\r", "    pm.expect(jsonData).to.have.property('number');\r", "    pm.expect(jsonData.number).to.be.a('number');\r", "});\r", "pm.test(\"Response must be valid and have a make\", function () {\r", "    var jsonData = pm.response.json().elevator;\r", "    pm.expect(jsonData).to.have.property('make');\r", "});\r", "pm.test(\"Response must be valid and have a model\", function () {\r", "    var jsonData = pm.response.json().elevator;\r", "    pm.expect(jsonData).to.have.property('model');\r", "});\r", "pm.test(\"Response must be valid and have a serialNumber\", function () {\r", "    var jsonData = pm.response.json().elevator;\r", "    pm.expect(jsonData).to.have.property('serialNumber');\r", "});\r", "pm.test(\"Response must be valid and have a description\", function () {\r", "    var jsonData = pm.response.json().elevator;\r", "    pm.expect(jsonData).to.have.property('description');\r", "});"], "type": "text/javascript"}}], "id": "e9a200d4-8deb-4847-9dc6-144e98c0ee55", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "POST", "header": [], "body": {"mode": "raw", "raw": "{\r\n    \"number\": {{$randomInt}},\r\n    \"make\": \"{{myRandomMake}}\",\r\n    \"model\": \"{{myRandomModel}}\",\r\n    \"serialNumber\": \"{{myRandomSerial}}\",\r\n    \"description\": \"{{myRandomDescriptionE}}\",\r\n    \"floors\": [5,8]\r\n}", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/building/EF/elevator", "host": ["{{baseUrl}}"], "path": ["building", "EF", "elevator"]}}, "response": [], "uid": "30711573-e9a200d4-8deb-4847-9dc6-144e98c0ee55"}, {"name": "Create Elevator in the building with existing elevator - Failure", "event": [{"listen": "prerequest", "script": {"id": "b7444cad-2ba6-41fe-90e0-b54e22941c84", "exec": [""], "type": "text/javascript"}}, {"listen": "test", "script": {"id": "a0ff29bd-930f-4017-bf1c-4e10f3c152e1", "exec": ["pm.test(\"Status code is 400\", function () {\r", "    pm.response.to.have.status(400);\r", "});"], "type": "text/javascript"}}], "id": "8bc85d1f-0e54-406e-ac5c-f1571c5271af", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "POST", "header": [], "body": {"mode": "raw", "raw": "{\r\n    \"number\": {{$randomInt}},\r\n    \"make\": \"{{myRandomMake}}\",\r\n    \"model\": \"{{myRandomModel}}\",\r\n    \"serialNumber\": \"{{myRandomSerial}}\",\r\n    \"description\": \"{{myRandomDescriptionE}}\",\r\n    \"floors\": [4,5]\r\n}", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/building/EF/elevator", "host": ["{{baseUrl}}"], "path": ["building", "EF", "elevator"]}}, "response": [], "uid": "30711573-8bc85d1f-0e54-406e-ac5c-f1571c5271af"}, {"name": "Get elevators in building - Success", "event": [{"listen": "test", "script": {"id": "2a2ffb12-bdf2-42c7-a05a-871877b29c10", "exec": ["pm.test(\"Status code is 200\", function () {\r", "    pm.response.to.have.status(200);\r", "});\r", "\r", "let jsonData = pm.response.json();\r", "pm.test(\"Has array of 1 elevator\", function () {\r", "    pm.expect(jsonData.length).to.eql(1);\r", "});"], "type": "text/javascript"}}], "id": "f4003abd-08b7-4d93-87f0-fdaff5288189", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "GET", "header": [], "url": {"raw": "{{baseUrl}}/building/EF/elevators", "host": ["{{baseUrl}}"], "path": ["building", "EF", "elevators"]}}, "response": [], "uid": "30711573-f4003abd-08b7-4d93-87f0-fdaff5288189"}, {"name": "Get floors served by elevator - Success (Elevator C. - fails)", "event": [{"listen": "test", "script": {"id": "9fa6817a-726d-4572-8b46-61866e99ef76", "exec": ["pm.test(\"Status code is 200\", function () {\r", "    pm.response.to.have.status(200);\r", "});\r", "\r", "// let jsonData = pm.response.json();\r", "// pm.test(\"Has array of 1 elevator\", function () {\r", "//     pm.expect(jsonData.length).to.eql(1);\r", "// });"], "type": "text/javascript"}}], "id": "d1167367-0fb2-4bd3-b0cd-4d5f6c702b10", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "GET", "header": [], "url": {"raw": "{{baseUrl}}/floor/elevator?buildingCode=EF", "host": ["{{baseUrl}}"], "path": ["floor", "elevator"], "query": [{"key": "buildingCode", "value": "EF"}]}}, "response": [], "uid": "30711573-d1167367-0fb2-4bd3-b0cd-4d5f6c702b10"}, {"name": "Update Elevator with all fields - Success", "event": [{"listen": "prerequest", "script": {"id": "b7444cad-2ba6-41fe-90e0-b54e22941c84", "exec": [""], "type": "text/javascript"}}, {"listen": "test", "script": {"id": "a0ff29bd-930f-4017-bf1c-4e10f3c152e1", "exec": ["pm.test(\"Status code is 200\", function () {\r", "    pm.response.to.have.status(200);\r", "});\r", "let jsonData = pm.response.json();\r", "pm.test(\"Response must have elevator object property\", function () {\r", "    pm.expect(jsonData).to.have.property('elevator');\r", "});\r", "let elevatorJsonData = jsonData.elevator;\r", "pm.test(\"Response must have valid properties\", function () {\r", "    pm.expect(elevatorJsonData).to.have.property('make');\r", "    pm.expect(elevatorJsonData).to.have.property('model');\r", "    pm.expect(elevatorJsonData).to.have.property('serialNumber');\r", "    pm.expect(elevatorJsonData).to.have.property('description');\r", "});\r", "pm.test(\"Response must have new property values\", function () {\r", "    pm.expect(elevatorJsonData.make).to.eql(pm.collectionVariables.get(\"myRandomMake\"));\r", "    pm.expect(elevatorJsonData.model).to.eql(pm.collectionVariables.get(\"myRandomModel\"));\r", "    pm.expect(elevatorJsonData.serialNumber).to.eql(pm.collectionVariables.get(\"myRandomSerial\"));\r", "    pm.expect(elevatorJsonData.description).to.eql(pm.collectionVariables.get(\"myRandomDescriptionE\"));\r", "});\r", ""], "type": "text/javascript"}}], "id": "5d1932c7-e0be-4ff5-9f11-05225726d03e", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "PUT", "header": [], "body": {"mode": "raw", "raw": "{\r\n    \"make\": \"{{myRandomMake}}\",\r\n    \"model\": \"{{myRandomModel}}\",\r\n    \"serialNumber\": \"{{myRandomSerial}}\",\r\n    \"description\": \"{{myRandomDescriptionE}}\"\r\n}", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/building/EF/elevator", "host": ["{{baseUrl}}"], "path": ["building", "EF", "elevator"]}}, "response": [], "uid": "30711573-5d1932c7-e0be-4ff5-9f11-05225726d03e"}, {"name": "Update Elevator with missing fields - Failure", "event": [{"listen": "prerequest", "script": {"id": "b7444cad-2ba6-41fe-90e0-b54e22941c84", "exec": [""], "type": "text/javascript"}}, {"listen": "test", "script": {"id": "a0ff29bd-930f-4017-bf1c-4e10f3c152e1", "exec": ["pm.test(\"Status code is 400\", function () {\r", "    pm.response.to.have.status(400);\r", "});\r", "let jsonData = pm.response.json();\r", "pm.test(\"Response must have error message\", function () {\r", "    pm.expect(jsonData).to.have.property(\"message\");\r", "    pm.expect(jsonData.message).to.match(/is required/);\r", "});\r", ""], "type": "text/javascript"}}], "id": "f7d69971-ae22-4f99-ae0e-39f506e35b7a", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "PUT", "header": [], "body": {"mode": "raw", "raw": "{\r\n    \"make\": \"{{myRandomMake}}\",\r\n    \"description\": \"{{myRandomDescriptionE}}\"\r\n}", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/building/EF/elevator", "host": ["{{baseUrl}}"], "path": ["building", "EF", "elevator"]}}, "response": [], "uid": "30711573-f7d69971-ae22-4f99-ae0e-39f506e35b7a"}, {"name": "Update Elevator partially - Success", "event": [{"listen": "prerequest", "script": {"id": "b7444cad-2ba6-41fe-90e0-b54e22941c84", "exec": [""], "type": "text/javascript"}}, {"listen": "test", "script": {"id": "a0ff29bd-930f-4017-bf1c-4e10f3c152e1", "exec": ["pm.test(\"Status code is 200\", function () {\r", "    pm.response.to.have.status(200);\r", "});\r", "let jsonData = pm.response.json();\r", "pm.test(\"Response must have elevator object property\", function () {\r", "    pm.expect(jsonData).to.have.property('elevator');\r", "});\r", "let elevatorJsonData = jsonData.elevator;\r", "pm.test(\"Response must have valid properties\", function () {\r", "    pm.expect(elevatorJsonData).to.have.property('make');\r", "    pm.expect(elevatorJsonData).to.have.property('description');\r", "});\r", "pm.test(\"Response must have new property values\", function () {\r", "    pm.expect(elevatorJsonData.make).to.eql(pm.collectionVariables.get(\"myRandomMake\"));\r", "    pm.expect(elevatorJsonData.description).to.eql(pm.collectionVariables.get(\"myRandomDescriptionE\"));\r", "});\r", ""], "type": "text/javascript"}}], "id": "77a91184-f01c-43e6-bfd9-81e8f18ec454", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "PATCH", "header": [], "body": {"mode": "raw", "raw": "{\r\n    \"make\": \"{{myRandomMake}}\",\r\n    \"description\": \"{{myRandomDescriptionE}}\"\r\n}", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/building/EF/elevator", "host": ["{{baseUrl}}"], "path": ["building", "EF", "elevator"]}}, "response": [], "uid": "30711573-77a91184-f01c-43e6-bfd9-81e8f18ec454"}], "event": [{"listen": "prerequest", "script": {"id": "a8489478-2540-4a87-8291-0ea845afdd47", "type": "text/javascript", "exec": ["// Reuse the functions if needed", "const spacesRegex = /\\s/g;", "function randomString(length, chars) {", "    let result = '';", "    while (result.length < length) {", "        let char = chars[Math.floor(Math.random() * chars.length)];", "        if ((result.length === 0 || result.length === length - 1) && char === ' ') {", "            continue; ", "        }", "        result += char;", "    }", "    result = result.trim();  ", "    return result;", "}", "", "function randomAlphanumericString(length, withSpaces = false) {", "    let characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';", "    if (withSpaces) characters += ' '.repeat(10);", "    return randomString(length, characters);", "}", "", "// Update the code below for the tested domain object", "", "let myRandomCode = randomAlphanumericString(300, false);", "myRandomCode = myRandomCode.slice(1, 5);  // Ensure code is no longer than 5 characters", "", "let myRandomName = pm.variables.replaceIn('{{$randomProductName}}');;", "myRandomName = myRandomName.replace(spacesRegex, '').slice(0, 50);  // Ensure name is no longer than 50 characters", "", "let myRandomDescription = pm.variables.replaceIn('{{$randomPhrase}}');", "myRandomDescription = myRandomDescription.slice(0, 255);  // Ensure description is no longer than 255 ", "", "const myRandomFloorSizeLength = pm.variables.replaceIn('{{$randomInt}}') + 1;", "const myRandomFloorSizeWidth = pm.variables.replaceIn('{{$randomInt}}') + 1;", "", "// Set the variables for the collection requests to access", "pm.collectionVariables.set(\"myRandomCode\", myRandomCode);", "pm.collectionVariables.set(\"myRandomName\", myRandomName);", "pm.collectionVariables.set(\"myRandomDescription\", myRandomDescription);", "pm.collectionVariables.set(\"myRandomFloorSizeLength\", myRandomFloorSizeLength);", "pm.collectionVariables.set(\"myRandomFloorSizeWidth\", myRandomFloorSizeWidth);", "", "", "let myRandomMake = randomAlphanumericString(20, false);", "let myRandomModel = randomAlphanumericString(20, false);", "let myRandomDescriptionE = randomAlphanumericString(35, false);", "let myRandomSerial = randomAlphanumericString(20, false);", "", "", "", "// Set the variables for the collection requests to access", "pm.collectionVariables.set(\"myRandomMake\", myRandomCode);", "pm.collectionVariables.set(\"myRandomModel\", myRandomName);", "pm.collectionVariables.set(\"myRandomDescriptionE\", myRandomDescriptionE);", "pm.collectionVariables.set(\"myRandomSerial\", myRandomFloorSizeLength);"]}}, {"listen": "test", "script": {"id": "c424413c-d4c1-4eca-a274-46d34e13faee", "type": "text/javascript", "exec": [""]}}], "variable": [{"key": "baseUrl", "value": "localhost:4000/api", "type": "string"}, {"key": "myRandomCode", "value": ""}, {"key": "myRandomName", "value": ""}, {"key": "myRandomDescription", "value": ""}, {"key": "myRandomFloorSizeLength", "value": ""}, {"key": "myRandomFloorSizeWidth", "value": ""}, {"key": "myRandomMake", "value": ""}, {"key": "myRandomModel", "value": ""}, {"key": "myRandomDescriptionE", "value": ""}, {"key": "myRandomSerial", "value": ""}, {"key": "lastCreatedFloorId", "value": "", "type": "string"}]}
{"info": {"_postman_id": "75bbfb5f-e53f-4795-91be-e2fc0b8808dc", "name": "Node E2E Tests - MinMax Floors of building", "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json", "updatedAt": "2023-11-16T09:23:40.000Z", "uid": "30686794-75bbfb5f-e53f-4795-91be-e2fc0b8808dc"}, "item": [{"name": "[Pre]Create Building MMA with Optional Fields - Success", "id": "0409b078-193f-4f9d-abca-2ecb1912e3a3", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "POST", "header": [], "body": {"mode": "raw", "raw": "{\r\n    \"code\": \"MMA\",\r\n    \"floorSizeLength\": {{myRandomFloorSizeLength}},\r\n    \"floorSizeWidth\": {{myRandomFloorSizeWidth}}\r\n}", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/building", "host": ["{{baseUrl}}"], "path": ["building"]}}, "response": [], "uid": "30686794-0409b078-193f-4f9d-abca-2ecb1912e3a3"}, {"name": "[Pre]Create Building MMB with Optional Fields - Success", "event": [{"listen": "test", "script": {"id": "bbc16bf5-3c0f-447a-8cb6-03ba2090b88a", "exec": ["pm.test(\"Status code is 201\", function () {\r", "    pm.response.to.have.status(201);\r", "});\r", "\r", "pm.test(\"Response must have a code\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData).to.have.property('code');\r", "    pm.expect(jsonData.code).to.be.a('string');\r", "});\r", "\r", "pm.test(\"Response must have a floorSizeLength\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData).to.have.property('floorSizeLength');\r", "    pm.expect(jsonData.floorSizeLength).to.be.a('number');\r", "});\r", "\r", "pm.test(\"Response must have a floorSizeWidth\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData).to.have.property('floorSizeWidth');\r", "    pm.expect(jsonData.floorSizeWidth).to.be.a('number');\r", "});\r", "\r", "pm.test(\"Response must have a name as a string\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData).to.have.property('name');\r", "    pm.expect(jsonData.name).to.be.a('string');\r", "});\r", "\r", "pm.test(\"Response must have a description as a string\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData).to.have.property('description');\r", "    pm.expect(jsonData.description).to.be.a('string');\r", "});\r", ""], "type": "text/javascript"}}], "id": "7b42aca2-a60e-495e-a5bc-3e69d91c665d", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "POST", "header": [], "body": {"mode": "raw", "raw": "{\r\n    \"code\": \"MMB\",\r\n    \"floorSizeLength\": {{myRandomFloorSizeLength}},\r\n    \"floorSizeWidth\": {{myRandomFloorSizeWidth}}\r\n}", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/building", "host": ["{{baseUrl}}"], "path": ["building"]}}, "response": [], "uid": "30686794-7b42aca2-a60e-495e-a5bc-3e69d91c665d"}, {"name": "[Pre] Create Floor 1 for Building MMA - Success", "event": [{"listen": "test", "script": {"id": "019c5e01-fb8d-47e8-8abb-d72fde83769c", "exec": [""], "type": "text/javascript"}}, {"listen": "prerequest", "script": {"id": "e697e8a8-9b63-41fe-860b-76fee853f483", "exec": [""], "type": "text/javascript"}}], "id": "a8235353-a404-40d5-8f16-e5b9d7a8b5b3", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "POST", "header": [], "body": {"mode": "raw", "raw": "{\r\n    \"floorNumber\": \"1\",\r\n    \"description\": \"{{myRandomDescription}}\",\r\n    \"servedByElevator\":\"{{$randomBoolean}}\",\r\n    \"buildingCode\":\"MMA\"\r\n}", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/floor", "host": ["{{baseUrl}}"], "path": ["floor"]}}, "response": [], "uid": "30686794-a8235353-a404-40d5-8f16-e5b9d7a8b5b3"}, {"name": "[Pre] Create Floor 2 for Building MMA - Success", "event": [{"listen": "prerequest", "script": {"id": "c23a6f59-1283-42ef-bc05-46a17153fda8", "exec": [""], "type": "text/javascript"}}, {"listen": "test", "script": {"id": "136a32b4-37f9-4a0d-af63-edd48f22e9a5", "exec": [""], "type": "text/javascript"}}], "id": "bfe45a54-f02c-437b-bb85-efe0f52ed840", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "POST", "header": [], "body": {"mode": "raw", "raw": "{\r\n    \"floorNumber\": \"2\",\r\n    \"description\": \"{{myRandomDescription}}\",\r\n    \"servedByElevator\":\"{{$randomBoolean}}\",\r\n    \"buildingCode\":\"MMA\"\r\n}", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/floor", "host": ["{{baseUrl}}"], "path": ["floor"]}}, "response": [], "uid": "30686794-bfe45a54-f02c-437b-bb85-efe0f52ed840"}, {"name": "[Pre] Create Floor 1 for Building MMB - Success", "event": [{"listen": "prerequest", "script": {"id": "c23a6f59-1283-42ef-bc05-46a17153fda8", "exec": [""], "type": "text/javascript"}}, {"listen": "test", "script": {"id": "136a32b4-37f9-4a0d-af63-edd48f22e9a5", "exec": [""], "type": "text/javascript"}}], "id": "4eab0125-6e42-4439-b974-0d318137bbfd", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "POST", "header": [], "body": {"mode": "raw", "raw": "{\r\n    \"floorNumber\": \"1\",\r\n    \"description\": \"{{myRandomDescription}}\",\r\n    \"servedByElevator\":\"{{$randomBoolean}}\",\r\n    \"buildingCode\":\"MMB\"\r\n}", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/floor", "host": ["{{baseUrl}}"], "path": ["floor"]}}, "response": [], "uid": "30686794-4eab0125-6e42-4439-b974-0d318137bbfd"}, {"name": "[Pre] Create Floor 2 for Building MMB - Success", "event": [{"listen": "prerequest", "script": {"id": "c23a6f59-1283-42ef-bc05-46a17153fda8", "exec": [""], "type": "text/javascript"}}, {"listen": "test", "script": {"id": "136a32b4-37f9-4a0d-af63-edd48f22e9a5", "exec": [""], "type": "text/javascript"}}], "id": "8da483b7-5c6e-426d-bf08-c922483ff4dc", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "POST", "header": [], "body": {"mode": "raw", "raw": "{\r\n    \"floorNumber\": \"2\",\r\n    \"description\": \"{{myRandomDescription}}\",\r\n    \"servedByElevator\":\"{{$randomBoolean}}\",\r\n    \"buildingCode\":\"MMB\"\r\n}", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/floor", "host": ["{{baseUrl}}"], "path": ["floor"]}}, "response": [], "uid": "30686794-8da483b7-5c6e-426d-bf08-c922483ff4dc"}, {"name": "[Pre] Create Floor 3 for Building MMB - Success", "event": [{"listen": "prerequest", "script": {"id": "c23a6f59-1283-42ef-bc05-46a17153fda8", "exec": [""], "type": "text/javascript"}}, {"listen": "test", "script": {"id": "136a32b4-37f9-4a0d-af63-edd48f22e9a5", "exec": [""], "type": "text/javascript"}}], "id": "8a1d0fb7-568b-40d5-9f58-13390d4821c2", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "POST", "header": [], "body": {"mode": "raw", "raw": "{\r\n    \"floorNumber\": \"3\",\r\n    \"description\": \"{{myRandomDescription}}\",\r\n    \"servedByElevator\":\"{{$randomBoolean}}\",\r\n    \"buildingCode\":\"MMB\"\r\n}", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/floor", "host": ["{{baseUrl}}"], "path": ["floor"]}}, "response": [], "uid": "30686794-8a1d0fb7-568b-40d5-9f58-13390d4821c2"}, {"name": "Get building with floors between min and max without min value - Failure", "event": [{"listen": "test", "script": {"id": "96c85a33-814f-4ddd-893e-b67aa3506a9a", "exec": ["pm.test(\"Status code is 400\", function () {\r", "    pm.response.to.have.status(400);\r", "});\r", "\r", "pm.test(\"Error response has a message property\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData).to.have.property('message');\r", "});\r", "\r", "pm.test(\"Error message for missing code\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData.message).to.eql('child \\\"minFloor\\\" fails because [\\\"minFloor\\\" is required]');\r", "});\r", ""], "type": "text/javascript"}}], "id": "31a63850-a8ce-4443-af74-132c37b4daf0", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "GET", "header": [], "body": {"mode": "raw", "raw": "", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/building?maxFloor=2", "host": ["{{baseUrl}}"], "path": ["building"], "query": [{"key": "maxFloor", "value": "2"}]}}, "response": [], "uid": "30686794-31a63850-a8ce-4443-af74-132c37b4daf0"}, {"name": "Get building with floors between min and max without max value - Failure", "event": [{"listen": "test", "script": {"id": "7c281805-3459-441e-80f8-224a9f88f2bf", "exec": ["pm.test(\"Status code is 400\", function () {\r", "    pm.response.to.have.status(400);\r", "});\r", "\r", "pm.test(\"Error response has a message property\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData).to.have.property('message');\r", "});\r", "\r", "pm.test(\"Error message for missing code\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData.message).to.eql('child \\\"maxFloor\\\" fails because [\\\"maxFloor\\\" is required]');\r", "});\r", ""], "type": "text/javascript"}}], "id": "6faea2ef-1e1d-4995-8b79-b9716abb305c", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "GET", "header": [], "body": {"mode": "raw", "raw": "", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/building?minFloor=2", "host": ["{{baseUrl}}"], "path": ["building"], "query": [{"key": "minFloor", "value": "2"}]}}, "response": [], "uid": "30686794-6faea2ef-1e1d-4995-8b79-b9716abb305c"}], "event": [{"listen": "prerequest", "script": {"id": "ec989ef3-a1dd-4b72-a4da-b5d781e055b8", "type": "text/javascript", "exec": ["// Reuse the functions if needed", "const spacesRegex = /\\s/g;", "function randomString(length, chars) {", "    let result = '';", "    while (result.length < length) {", "        let char = chars[Math.floor(Math.random() * chars.length)];", "        if ((result.length === 0 || result.length === length - 1) && char === ' ') {", "            continue; ", "        }", "        result += char;", "    }", "    result = result.trim();  ", "    return result;", "}", "", "function randomAlphanumericString(length, withSpaces = false) {", "    let characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';", "    if (withSpaces) characters += ' '.repeat(10);", "    return randomString(length, characters);", "}", "", "// Update the code below for the tested domain object", "", "let myRandomCode = randomAlphanumericString(300, false);", "myRandomCode = myRandomCode.slice(1, 5);  // Ensure code is no longer than 5 characters", "", "let myRandomName = pm.variables.replaceIn('{{$randomProductName}}');;", "myRandomName = myRandomName.replace(spacesRegex, '').slice(0, 50);  // Ensure name is no longer than 50 characters", "", "let myRandomDescription = pm.variables.replaceIn('{{$randomPhrase}}');", "myRandomDescription = myRandomDescription.slice(0, 255);  // Ensure description is no longer than 255 ", "", "const myRandomFloorSizeLength = pm.variables.replaceIn('{{$randomInt}}') + 1;", "const myRandomFloorSizeWidth = pm.variables.replaceIn('{{$randomInt}}') + 1;", "", "// Set the variables for the collection requests to access", "pm.collectionVariables.set(\"myRandomCode\", myRandomCode);", "pm.collectionVariables.set(\"myRandomName\", myRandomName);", "pm.collectionVariables.set(\"myRandomDescription\", myRandomDescription);", "pm.collectionVariables.set(\"myRandomFloorSizeLength\", myRandomFloorSizeLength);", "pm.collectionVariables.set(\"myRandomFloorSizeWidth\", myRandomFloorSizeWidth);", ""]}}, {"listen": "test", "script": {"id": "63bb1c4f-8795-4081-896e-8af8d4975cad", "type": "text/javascript", "exec": [""]}}], "variable": [{"key": "baseUrl", "value": "http://localhost:4000/api/", "type": "string"}, {"key": "myRandomCode", "value": "A", "type": "string"}, {"key": "myRandomName", "value": "NameA", "type": "string"}, {"key": "myRandomDescription", "value": "DescriptionA", "type": "string"}, {"key": "myRandomFloorSizeLength", "value": "10", "type": "string"}, {"key": "myRandomFloorSizeWidth", "value": "11", "type": "string"}, {"key": "lastCreatedBuildingCode", "value": ""}]}
{"info": {"_postman_id": "4c137263-96d5-41c1-bba5-4c27ac9b750c", "name": "Node E2E Tests - Building", "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json", "updatedAt": "2023-11-16T09:22:17.000Z", "uid": "30686839-4c137263-96d5-41c1-bba5-4c27ac9b750c"}, "item": [{"name": "Create Building with All Fields - Success", "event": [{"listen": "test", "script": {"id": "b14e81dd-c07d-41f0-9991-3b4c36b92ca9", "exec": ["pm.test(\"Status code is 201\", function () {\r", "    pm.response.to.have.status(201);\r", "});\r", "\r", "var jsonData = pm.response.json();\r", "pm.collectionVariables.set(\"lastCreatedBuildingCode\", pm.collectionVariables.get(\"myRandomCode\"));\r", "pm.collectionVariables.set(\"lastCreatedBuildingId\", jsonData.id);\r", "\r", "pm.test(\"Response must be valid and have a name\", function () {\r", "    pm.expect(jsonData).to.have.property('name');\r", "    pm.expect(jsonData.name).to.be.a('string');\r", "});\r", "\r", "pm.test(\"Response must have a code\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData).to.have.property('code');\r", "    pm.expect(jsonData.code).to.be.a('string');\r", "});\r", "\r", "pm.test(\"Response must have a description\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData).to.have.property('description');\r", "    pm.expect(jsonData.description).to.be.a('string');\r", "});\r", "\r", "pm.test(\"Response must have a floorSizeLength\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData).to.have.property('floorSizeLength');\r", "    pm.expect(jsonData.floorSizeLength).to.be.a('number');\r", "});\r", "\r", "pm.test(\"Response must have a floorSizeWidth\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData).to.have.property('floorSizeWidth');\r", "    pm.expect(jsonData.floorSizeWidth).to.be.a('number');\r", "});\r", ""], "type": "text/javascript"}}], "id": "c36590f1-1ebe-4853-9333-759037fb107e", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "POST", "header": [], "body": {"mode": "raw", "raw": "{\r\n    \"name\": \"{{myRandomName}}\",\r\n    \"code\": \"{{myRandomCode}}\",\r\n    \"description\": \"{{myRandomDescription}}\",\r\n    \"floorSizeLength\": {{myRandomFloorSizeLength}},\r\n    \"floorSizeWidth\": {{myRandomFloorSizeWidth}}\r\n}", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/building", "host": ["{{baseUrl}}"], "path": ["building"]}}, "response": [], "uid": "30686839-c36590f1-1ebe-4853-9333-759037fb107e"}, {"name": "Create Building without Optional Fields - Success", "event": [{"listen": "test", "script": {"id": "7dfe080a-d754-4c8b-afd5-a15b02d298a8", "exec": ["pm.test(\"Status code is 201\", function () {\r", "    pm.response.to.have.status(201);\r", "});\r", "\r", "pm.test(\"Response must have a code\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData).to.have.property('code');\r", "    pm.expect(jsonData.code).to.be.a('string');\r", "});\r", "\r", "pm.test(\"Response must have a floorSizeLength\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData).to.have.property('floorSizeLength');\r", "    pm.expect(jsonData.floorSizeLength).to.be.a('number');\r", "});\r", "\r", "pm.test(\"Response must have a floorSizeWidth\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData).to.have.property('floorSizeWidth');\r", "    pm.expect(jsonData.floorSizeWidth).to.be.a('number');\r", "});\r", "\r", "pm.test(\"Response must have a name as a string\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData).to.have.property('name');\r", "    pm.expect(jsonData.name).to.be.a('string');\r", "});\r", "\r", "pm.test(\"Response must have a description as a string\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData).to.have.property('description');\r", "    pm.expect(jsonData.description).to.be.a('string');\r", "});\r", ""], "type": "text/javascript"}}], "id": "6769059d-6fdd-426a-b77e-6f22b45fbf73", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "POST", "header": [], "body": {"mode": "raw", "raw": "{\r\n    \"code\": \"{{myRandomCode}}\",\r\n    \"floorSizeLength\": {{myRandomFloorSizeLength}},\r\n    \"floorSizeWidth\": {{myRandomFloorSizeWidth}}\r\n}", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/building", "host": ["{{baseUrl}}"], "path": ["building"]}}, "response": [], "uid": "30686839-6769059d-6fdd-426a-b77e-6f22b45fbf73"}, {"name": "Create Building without Code Field - Failure", "event": [{"listen": "test", "script": {"id": "7dfe080a-d754-4c8b-afd5-a15b02d298a8", "exec": ["pm.test(\"Status code is 400\", function () {\r", "    pm.response.to.have.status(400);\r", "});\r", "\r", "pm.test(\"Error response has a message property\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData).to.have.property('message');\r", "});\r", "\r", "pm.test(\"Error message for missing code\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData.message).to.eql('child \"code\" fails because [\"code\" is required]');\r", "});\r", ""], "type": "text/javascript"}}], "id": "deacf297-0cc3-418d-bd9c-fc6d37aa35f2", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "POST", "header": [], "body": {"mode": "raw", "raw": "{\r\n    \"name\": \"{{myRandomName}}\",\r\n    \"description\": \"{{myRandomDescription}}\",\r\n    \"floorSizeLength\": {{myRandomFloorSizeLength}},\r\n    \"floorSizeWidth\": {{myRandomFloorSizeWidth}}\r\n}", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/building", "host": ["{{baseUrl}}"], "path": ["building"]}}, "response": [], "uid": "30686839-deacf297-0cc3-418d-bd9c-fc6d37aa35f2"}, {"name": "Create Building with Incorrect Length - Failure", "event": [{"listen": "test", "script": {"id": "7dfe080a-d754-4c8b-afd5-a15b02d298a8", "exec": ["pm.test(\"Status code is 400\", function () {\r", "    pm.response.to.have.status(400);\r", "});\r", "\r", "pm.test(\"Error response has a message property\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData).to.have.property('message');\r", "});\r", "\r", "pm.test(\"Error message for floor size length 0\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData.message).to.eql('length must be greater than 0');\r", "});\r", ""], "type": "text/javascript"}}], "id": "110b0edd-3bb3-490d-b507-75cd8df57862", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "POST", "header": [], "body": {"mode": "raw", "raw": "{\r\n    \"name\": \"{{myRandomName}}\",\r\n    \"code\": \"{{myRandomCode}}\",\r\n    \"description\": \"{{myRandomDescription}}\",\r\n    \"floorSizeLength\": 0,\r\n    \"floorSizeWidth\": {{myRandomFloorSizeWidth}}\r\n}", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/building", "host": ["{{baseUrl}}"], "path": ["building"]}}, "response": [], "uid": "30686839-110b0edd-3bb3-490d-b507-75cd8df57862"}, {"name": "Update Building with All Editable Fields - Success", "event": [{"listen": "test", "script": {"id": "b14e81dd-c07d-41f0-9991-3b4c36b92ca9", "exec": ["pm.test(\"Status code is 200\", function () {\r", "    pm.response.to.have.status(200);\r", "});\r", "\r", "var jsonData = pm.response.json();\r", "\r", "pm.test(\"Response must be valid and have a name\", function () {\r", "    pm.expect(jsonData).to.have.property('name');\r", "    pm.expect(jsonData.name).to.be.a('string');\r", "});\r", "\r", "pm.test(\"Response must have a code\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData).to.have.property('code');\r", "    pm.expect(jsonData.code).to.be.a('string');\r", "});\r", "\r", "pm.test(\"Response must have a description\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData).to.have.property('description');\r", "    pm.expect(jsonData.description).to.be.a('string');\r", "});\r", "\r", "pm.test(\"Response must have a floorSizeLength\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData).to.have.property('floorSizeLength');\r", "    pm.expect(jsonData.floorSizeLength).to.be.a('number');\r", "});\r", "\r", "pm.test(\"Response must have a floorSizeWidth\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData).to.have.property('floorSizeWidth');\r", "    pm.expect(jsonData.floorSizeWidth).to.be.a('number');\r", "});\r", ""], "type": "text/javascript"}}], "id": "d6454707-e654-44ba-bd3b-e68c39503df5", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "PUT", "header": [], "body": {"mode": "raw", "raw": "{\r\n    \"name\": \"{{myRandomName}}\",\r\n    \"description\": \"{{myRandomDescription}}\",\r\n    \"floorSizeLength\": {{myRandomFloorSizeLength}},\r\n    \"floorSizeWidth\": {{myRandomFloorSizeWidth}}\r\n}", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/building/{{lastCreatedBuildingId}}", "host": ["{{baseUrl}}"], "path": ["building", "{{lastCreatedBuildingId}}"]}}, "response": [], "uid": "30686839-d6454707-e654-44ba-bd3b-e68c39503df5"}, {"name": "Update Building with Non-existant Id - Failure", "event": [{"listen": "test", "script": {"id": "b14e81dd-c07d-41f0-9991-3b4c36b92ca9", "exec": ["pm.test(\"Status code is 400\", function () {\r", "    pm.response.to.have.status(400);\r", "});\r", "\r", "var jsonData = pm.response.json();\r", "\r", "pm.test(\"Response must be a proper error message\", function () {\r", "    pm.expect(jsonData).to.have.property('message');\r", "    pm.expect(jsonData.message).to.be.a('string');\r", "});\r", "\r", "\r", ""], "type": "text/javascript"}}], "id": "0c47900f-54a2-4e2d-84e8-a50aedefe9de", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "PUT", "header": [], "body": {"mode": "raw", "raw": "{\r\n    \"name\": \"{{myRandomName}}\",\r\n    \"description\": \"{{myRandomDescription}}\",\r\n    \"floorSizeLength\": {{myRandomFloorSizeLength}},\r\n    \"floorSizeWidth\": {{myRandomFloorSizeWidth}}\r\n}", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/building/non-existant-00000000000000000000000000", "host": ["{{baseUrl}}"], "path": ["building", "non-existant-00000000000000000000000000"]}}, "response": [], "uid": "30686839-0c47900f-54a2-4e2d-84e8-a50aedefe9de"}, {"name": "Update Building with Only Name Field - Success", "event": [{"listen": "test", "script": {"id": "b14e81dd-c07d-41f0-9991-3b4c36b92ca9", "exec": ["pm.test(\"Status code is 200\", function () {\r", "    pm.response.to.have.status(200);\r", "});\r", "\r", "var jsonData = pm.response.json();\r", "\r", "pm.test(\"Response must be valid and have a name\", function () {\r", "    pm.expect(jsonData).to.have.property('name');\r", "    pm.expect(jsonData.name).to.be.a('string');\r", "});\r", "\r", "pm.test(\"Response must have a code\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData).to.have.property('code');\r", "    pm.expect(jsonData.code).to.be.a('string');\r", "});\r", "\r", "pm.test(\"Response must have a description\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData).to.have.property('description');\r", "    pm.expect(jsonData.description).to.be.a('string');\r", "});\r", "\r", "pm.test(\"Response must have a floorSizeLength\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData).to.have.property('floorSizeLength');\r", "    pm.expect(jsonData.floorSizeLength).to.be.a('number');\r", "});\r", "\r", "pm.test(\"Response must have a floorSizeWidth\", function () {\r", "    var jsonData = pm.response.json();\r", "    pm.expect(jsonData).to.have.property('floorSizeWidth');\r", "    pm.expect(jsonData.floorSizeWidth).to.be.a('number');\r", "});\r", ""], "type": "text/javascript"}}], "id": "644e0e50-786d-4c4e-b2ad-ec7388bb3f88", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "PATCH", "header": [], "body": {"mode": "raw", "raw": "{\r\n    \"name\": \"{{myRandomName}}\"\r\n}", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/building/{{lastCreatedBuildingId}}", "host": ["{{baseUrl}}"], "path": ["building", "{{lastCreatedBuildingId}}"]}}, "response": [], "uid": "30686839-644e0e50-786d-4c4e-b2ad-ec7388bb3f88"}, {"name": "Update Building with Invalid Field - Failure", "event": [{"listen": "test", "script": {"id": "b14e81dd-c07d-41f0-9991-3b4c36b92ca9", "exec": ["pm.test(\"Status code is 400\", function () {\r", "    pm.response.to.have.status(400);\r", "});\r", "\r", "var jsonData = pm.response.json();\r", "\r", "pm.test(\"Response must have a proper error message\", function () {\r", "    pm.expect(jsonData).to.have.property('message');\r", "    pm.expect(jsonData.message).to.be.a('string');\r", "    pm.expect(jsonData.message).to.match(/length/);\r", "});\r", ""], "type": "text/javascript"}}], "id": "cc708210-cd00-4437-b241-9aa89c8cfb8e", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "PATCH", "header": [], "body": {"mode": "raw", "raw": "{\r\n    \"name\": \"loooooooooooooooooooooooooooooooooooooooooooooooooooooonnggggggggggggggggggggggg\"\r\n}", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/building/{{lastCreatedBuildingId}}", "host": ["{{baseUrl}}"], "path": ["building", "{{lastCreatedBuildingId}}"]}}, "response": [], "uid": "30686839-cc708210-cd00-4437-b241-9aa89c8cfb8e"}, {"name": "Get All Buildings - Success", "event": [{"listen": "test", "script": {"id": "c07c5ff7-b75a-40af-8266-e23bb49f831a", "exec": ["pm.test(\"Status code is 200\", function () {", "    pm.response.to.have.status(200);", "});", "", "let jsonData = pm.response.json();", "", "pm.test(\"Response data is array and length is at least 2\", function () {", "    pm.expect(jsonData).to.be.an('array')", "    pm.expect(jsonData.length).to.above(1);", "});", ""], "type": "text/javascript"}}], "id": "7c978ef3-ca33-4d20-82ef-8a473c8e8d0c", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "GET", "header": [], "url": {"raw": "{{baseUrl}}/building/all", "host": ["{{baseUrl}}"], "path": ["building", "all"]}}, "response": [], "uid": "30686839-7c978ef3-ca33-4d20-82ef-8a473c8e8d0c"}], "event": [{"listen": "prerequest", "script": {"id": "ec989ef3-a1dd-4b72-a4da-b5d781e055b8", "type": "text/javascript", "exec": ["// Reuse the functions if needed", "const spacesRegex = /\\s/g;", "function randomString(length, chars) {", "    let result = '';", "    while (result.length < length) {", "        let char = chars[Math.floor(Math.random() * chars.length)];", "        if ((result.length === 0 || result.length === length - 1) && char === ' ') {", "            continue; ", "        }", "        result += char;", "    }", "    result = result.trim();  ", "    return result;", "}", "", "function randomAlphanumericString(length, withSpaces = false) {", "    let characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';", "    if (withSpaces) characters += ' '.repeat(10);", "    return randomString(length, characters);", "}", "", "// Update the code below for the tested domain object", "", "let myRandomCode = randomAlphanumericString(300, false);", "myRandomCode = myRandomCode.slice(1, 5);  // Ensure code is no longer than 5 characters", "", "let myRandomName = pm.variables.replaceIn('{{$randomProductName}}');;", "myRandomName = myRandomName.replace(spacesRegex, '').slice(0, 50);  // Ensure name is no longer than 50 characters", "", "let myRandomDescription = pm.variables.replaceIn('{{$randomPhrase}}');", "myRandomDescription = myRandomDescription.slice(0, 255);  // Ensure description is no longer than 255 ", "", "const myRandomFloorSizeLength = pm.variables.replaceIn('{{$randomInt}}') + 1;", "const myRandomFloorSizeWidth = pm.variables.replaceIn('{{$randomInt}}') + 1;", "", "// Set the variables for the collection requests to access", "pm.collectionVariables.set(\"myRandomCode\", myRandomCode);", "pm.collectionVariables.set(\"myRandomName\", myRandomName);", "pm.collectionVariables.set(\"myRandomDescription\", myRandomDescription);", "pm.collectionVariables.set(\"myRandomFloorSizeLength\", myRandomFloorSizeLength);", "pm.collectionVariables.set(\"myRandomFloorSizeWidth\", myRandomFloorSizeWidth);", ""]}}, {"listen": "test", "script": {"id": "63bb1c4f-8795-4081-896e-8af8d4975cad", "type": "text/javascript", "exec": [""]}}], "variable": [{"key": "baseUrl", "value": "http://localhost:4000/api/", "type": "string"}, {"key": "myRandomCode", "value": "A", "type": "string"}, {"key": "myRandomName", "value": "NameA", "type": "string"}, {"key": "myRandomDescription", "value": "DescriptionA", "type": "string"}, {"key": "myRandomFloorSizeLength", "value": "10", "type": "string"}, {"key": "myRandomFloorSizeWidth", "value": "11", "type": "string"}, {"key": "lastCreatedBuildingCode", "value": ""}, {"key": "lastCreatedBuildingId", "value": ""}]}
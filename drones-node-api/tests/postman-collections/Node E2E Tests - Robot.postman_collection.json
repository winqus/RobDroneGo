{"info": {"_postman_id": "85140fe5-dfd9-429d-aefa-7d9bdd4fa0d1", "name": "Node E2E Tests - Robot", "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json", "updatedAt": "2023-11-16T09:24:17.000Z", "uid": "30686839-85140fe5-dfd9-429d-aefa-7d9bdd4fa0d1"}, "item": [{"name": "[Pre] Create RobotType", "event": [{"listen": "test", "script": {"id": "838b7acf-5b61-4501-912f-7dac93853067", "exec": ["pm.test(\"Creation is successful or already exists\", function () {\r", "    pm.expect(pm.response.code).to.be.oneOf([201, 400, 500]);\r", "})"], "type": "text/javascript"}}], "id": "65997566-2776-406a-8942-2a3387bebd5c", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "POST", "header": [], "body": {"mode": "raw", "raw": "{\r\n  \"name\": \"SomeRobotType1\",\r\n  \"brand\": \"SomeBrand1\",\r\n  \"model\": \"SomeModel1\",\r\n  \"typesOfTasks\": [\"Surveillance\"]\r\n}\r\n", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/robotType", "host": ["{{baseUrl}}"], "path": ["robotType"]}}, "response": [], "uid": "30686839-65997566-2776-406a-8942-2a3387bebd5c"}, {"name": "[Pre] Create RobotType 2", "event": [{"listen": "test", "script": {"id": "838b7acf-5b61-4501-912f-7dac93853067", "exec": ["pm.test(\"Creation is successful or already exists\", function () {\r", "    pm.expect(pm.response.code).to.be.oneOf([201, 400, 500]);\r", "})"], "type": "text/javascript"}}], "id": "6812c5a7-3b60-4146-a684-4ba3d7e0f268", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "POST", "header": [], "body": {"mode": "raw", "raw": "{\r\n  \"name\": \"SomeRobotType2\",\r\n  \"brand\": \"SomeBrand2\",\r\n  \"model\": \"SomeModel2\",\r\n  \"typesOfTasks\": [\"PickUpAndDelivery\"]\r\n}\r\n", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/robotType", "host": ["{{baseUrl}}"], "path": ["robotType"]}}, "response": [], "uid": "30686839-6812c5a7-3b60-4146-a684-4ba3d7e0f268"}, {"name": "Create robot with required body - Success", "event": [{"listen": "test", "script": {"id": "f2eeef86-4944-4835-924e-647c0409d09c", "exec": ["pm.test(\"Status code is 201\", function () {\r", "    pm.response.to.have.status(201);\r", "});\r", "let jsonData = pm.response.json();\r", "\r", "pm.test(\"Response must have valid properties\", function () {\r", "    pm.expect(jsonData).to.have.property('id');\r", "    pm.expect(jsonData).to.have.property('code');\r", "    pm.expect(jsonData).to.have.property('description');\r", "    pm.expect(jsonData).to.have.property('nickname');\r", "    pm.expect(jsonData).to.have.property('serialNumber');\r", "    pm.expect(jsonData).to.have.property('available');\r", "    pm.expect(jsonData).to.have.property('type');\r", "});\r", "pm.test(\"Response must have new property values\", function () {\r", "    pm.expect(jsonData.code).to.eql(\"Bully123\");\r", "    pm.expect(jsonData.nickname).to.eql(pm.collectionVariables.get(\"myRandomNickname\"));\r", "    pm.expect(jsonData.serialNumber).to.eql(pm.collectionVariables.get(\"myRandomSerial\"));\r", "});\r", ""], "type": "text/javascript"}}], "id": "e8869fd6-f59e-4a74-ac5b-126051394b71", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "POST", "header": [], "body": {"mode": "raw", "raw": "{\r\n    \"code\": \"Bully123\",\r\n    \"nickname\": \"{{myRandomNickname}}\",\r\n    \"serialNumber\": \"{{myRandomSerial}}\",\r\n    \"type\": \"SomeRobotType1\"\r\n}", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/robot", "host": ["{{baseUrl}}"], "path": ["robot"]}}, "response": [], "uid": "30686839-e8869fd6-f59e-4a74-ac5b-126051394b71"}, {"name": "Get robot by type - Success", "event": [{"listen": "test", "script": {"id": "7a811d3c-7377-4cdf-87b6-c7e97573ff6a", "exec": ["pm.test(\"Status code is 200\", function () {\r", "    pm.response.to.have.status(200);\r", "});\r", "// Add more tests"], "type": "text/javascript"}}], "id": "6a1b6a88-d17e-446e-9b87-25fc2558fee9", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "GET", "header": [], "url": {"raw": "{{baseUrl}}/robot?name=SomeRobotType1&brand=SomeBrand1&model=SomeModel1&typesOfTasks=Surveillance", "host": ["{{baseUrl}}"], "path": ["robot"], "query": [{"key": "name", "value": "SomeRobotType1"}, {"key": "brand", "value": "SomeBrand1"}, {"key": "model", "value": "SomeModel1"}, {"key": "typesOfTasks", "value": "Surveillance"}, {"key": "typesOfTasks", "value": "PickUpAndDelivery", "type": "text", "disabled": true}]}}, "response": [], "uid": "30686839-6a1b6a88-d17e-446e-9b87-25fc2558fee9"}, {"name": "Get all robots - Success", "event": [{"listen": "test", "script": {"id": "fa5b4892-69f3-48ea-8605-4cf79409e88d", "exec": ["pm.test(\"Status code is 200\", function () {", "    pm.response.to.have.status(200);", "});", "", "let jsonData = pm.response.json();", "", "pm.test(\"Response data is array of length of 1\", function () {", "    pm.expect(jsonData).to.be.an('array')", "    pm.expect(jsonData.length).to.eql(1);", "});"], "type": "text/javascript"}}], "id": "72e3ba97-79be-41de-9bdb-f2efe8bcc580", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "GET", "header": [], "url": {"raw": "{{baseUrl}}/robot/", "host": ["{{baseUrl}}"], "path": ["robot", ""]}}, "response": [], "uid": "30686839-72e3ba97-79be-41de-9bdb-f2efe8bcc580"}, {"name": "Change robot state - Success", "event": [{"listen": "test", "script": {"id": "b0688a02-e001-496a-a0b9-10e7d3c230d2", "exec": ["pm.test(\"Status code is 200\", function () {", "    pm.response.to.have.status(200);", "});", "", "let jsonData = pm.response.json();", "", "pm.test(\"Response must have valid properties\", function () {", "    pm.expect(jsonData).to.have.property('id');", "    pm.expect(jsonData).to.have.property('code');", "    pm.expect(jsonData).to.have.property('description');", "    pm.expect(jsonData).to.have.property('nickname');", "    pm.expect(jsonData).to.have.property('serialNumber');", "    pm.expect(jsonData).to.have.property('available');", "    pm.expect(jsonData).to.have.property('type');", "});", "pm.test(\"Response must have new property values\", function () {", "    pm.expect(jsonData.available).to.eql(false);", "    ", "});"], "type": "text/javascript"}}], "id": "4013bb43-dca5-46fc-b6e4-e50244d2ede7", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "PATCH", "header": [], "body": {"mode": "raw", "raw": "{\n    \"available\": false\n}", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/robot/Bully123/state", "host": ["{{baseUrl}}"], "path": ["robot", "Bully123", "state"]}}, "response": [], "uid": "30686839-4013bb43-dca5-46fc-b6e4-e50244d2ede7"}, {"name": "Change robot state - Failure", "event": [{"listen": "test", "script": {"id": "b0688a02-e001-496a-a0b9-10e7d3c230d2", "exec": ["pm.test(\"Status code is 400\", function () {", "    pm.response.to.have.status(400);", "});", "", "let jsonData = pm.response.json();", "", "pm.test(\"Response data is an object with a 'message' property\", function () {", "    pm.expect(jsonData).to.be.an('object');", "    pm.expect(jsonData.message).to.be.a('string');", "});"], "type": "text/javascript"}}], "id": "183ff925-c39a-49a2-9164-3073de049412", "protocolProfileBehavior": {"disableBodyPruning": true}, "request": {"method": "PATCH", "header": [], "body": {"mode": "raw", "raw": "{\n    \"available\": false\n}", "options": {"raw": {"language": "json"}}}, "url": {"raw": "{{baseUrl}}/robot/Bully123/state", "host": ["{{baseUrl}}"], "path": ["robot", "Bully123", "state"]}}, "response": [], "uid": "30686839-183ff925-c39a-49a2-9164-3073de049412"}], "event": [{"listen": "prerequest", "script": {"id": "1e052eb6-070d-486c-8e9e-358f1ec047e9", "type": "text/javascript", "exec": ["const spacesRegex = /\\s/g;", "function randomString(length, chars) {", "    let result = '';", "    while (result.length < length) {", "        let char = chars[Math.floor(Math.random() * chars.length)];", "        if ((result.length === 0 || result.length === length - 1) && char === ' ') {", "            continue; ", "        }", "        result += char;", "    }", "    result = result.trim();  ", "    return result;", "}", "", "function randomAlphanumericString(length, withSpaces = false) {", "    let characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';", "    if (withSpaces) characters += ' '.repeat(10);", "    return randomString(length, characters);", "}", "", "const myRandomNickname = pm.variables.replaceIn('{{$randomFirstName}}{{$randomInt}}');", "const myRandomCode = pm.variables.replaceIn('{{$randomFirstName}}{{$randomInt}}');", "const myRandomSerial = randomAlphanumericString(20, false);", "", "pm.collectionVariables.set(\"myRandomNickname\", myRandomNickname);", "pm.collectionVariables.set(\"myRandomSerial\", myRandomSerial);", "pm.collectionVariables.set(\"myRandomCode\", myRandomCode);"]}}, {"listen": "test", "script": {"id": "3c415d96-5100-4625-be9c-550f8e746204", "type": "text/javascript", "exec": [""]}}], "variable": [{"key": "myRandomNickname", "value": "robobobo1", "type": "string"}, {"key": "myRandomSerial", "value": "111111111111", "type": "string"}, {"key": "myRandomCode", "value": "123456", "type": "string"}, {"key": "baseUrl", "value": "localhost:4000/api", "type": "string"}]}